definitions:
  models.Book:
    properties:
      author:
        type: string
      createdAt:
        type: string
      genre:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.CreateBookInput:
    properties:
      author:
        type: string
      genre:
        type: string
      title:
        type: string
    required:
    - author
    - title
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.UpdateBookInput:
    properties:
      author:
        type: string
      genre:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/books:
    get:
      description: Get a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book
      parameters:
      - description: Book data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new book
      tags:
      - books
  /api/v1/books/{bookID}:
    delete:
      description: Delete a book by ID
      parameters:
      - description: Book ID
        in: path
        name: bookID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a book
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update an existing book
      parameters:
      - description: Book ID
        in: path
        name: bookID
        required: true
        type: integer
      - description: Updated book data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a book
      tags:
      - books
swagger: "2.0"
